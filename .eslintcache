[{"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/signup.js":"1","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/login.js":"2","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/App.js":"3","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/reportWebVitals.js":"4","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/Calculator.js":"5","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/components/Header.js":"6","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/MyInfo.js":"7","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/index.js":"8","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/Home.js":"9","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/edit.js":"10","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/show.js":"11","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/components/Carder.js":"12","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/Modal.js":"13","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/components/MeasureModal.js":"14"},{"size":2330,"mtime":1608803900809,"results":"15","hashOfConfig":"16"},{"size":2480,"mtime":1608805829485,"results":"17","hashOfConfig":"16"},{"size":1517,"mtime":1609179895557,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1608573572019,"results":"19","hashOfConfig":"16"},{"size":13095,"mtime":1609280432154,"results":"20","hashOfConfig":"16"},{"size":2391,"mtime":1609280866087,"results":"21","hashOfConfig":"16"},{"size":3939,"mtime":1609280616734,"results":"22","hashOfConfig":"16"},{"size":581,"mtime":1608583320452,"results":"23","hashOfConfig":"16"},{"size":495,"mtime":1609279959564,"results":"24","hashOfConfig":"16"},{"size":13200,"mtime":1609093117533,"results":"25","hashOfConfig":"16"},{"size":2561,"mtime":1609132329941,"results":"26","hashOfConfig":"16"},{"size":3703,"mtime":1609280857204,"results":"27","hashOfConfig":"16"},{"size":1955,"mtime":1609276671634,"results":"28","hashOfConfig":"16"},{"size":2484,"mtime":1609279552496,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"48ygxh",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/signup.js",["66"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport Header from '../components/Header'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\n\n\nconst Signup = (props) => {\n\n    const {gState, setGState} = React.useContext(GlobalCtx)\n    const {url} = gState\n\n    const blank = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const [form, setForm] = React.useState(blank)\n\n    const handleChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value})\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const {username, password} = form\n        fetch(`${url}/users`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({username: username, password: password})\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n            setForm(blank)\n            props.history.push(\"/login\")\n        })\n        \n    }\n\n    return(\n        <>\n            <Header/>\n            <Container>\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control \n                            type=\"text\" \n                            name=\"username\"\n                            value={form.username} \n                            onChange = {handleChange} placeholder=\"Enter username\" \n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control \n                            type=\"password\" \n                            name=\"password\"\n                            value={form.password} \n                            onChange={handleChange} placeholder=\"Password\" \n                        />\n                    </Form.Group>\n                    <Button variant=\"primary\" value=\"signup\" type=\"submit\">\n                        Signup\n                    </Button>\n                </Form>\n            </Container>\n        </>\n    )\n}\n\nexport default Signup;",["67","68"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/login.js",[],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/App.js",["69","70"],"import React from 'react'\nimport './App.css';\nimport Home from './pages/Home'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Route, Link, Switch} from \"react-router-dom\"\nimport Calculator from './pages/Calculator'\nimport Signup from './pages/signup'\nimport Login from './pages/login'\nimport MyInfo from './pages/MyInfo'\nimport Edit from './pages/edit';\nimport Show from './pages/show'\n\nexport const GlobalCtx = React.createContext(null)\n\n\nfunction App() {\n  \n  const [gState, setGState] = React.useState({\n    url: \"https://plastic-app-api-jl.herokuapp.com\", \n    token: null\n  })\n\n  React.useEffect(() => {\n    const token = JSON.parse(window.localStorage.getItem(\"token\"))\n    console.log(token)\n    if (token) {\n      setGState({...gState, token: token.token})\n    }\n  }, [])\n\n  return (\n    <GlobalCtx.Provider value={{gState, setGState}}>\n      <div className = \"App\">\n        <Route exact path = \"/\" render = {(rp) => gState.token ? <MyInfo {...rp}/> : <Home {...rp}/> }/>\n        <main>\n          <Switch>\n            <Route path = \"/plastic-calculator\" render = {(rp) => <Calculator {...rp}/>}/>\n            <Route path = \"/signup\" render = {(rp) => <Signup {...rp}/>}/>\n            <Route path = \"/login\" render = {(rp) => <Login {...rp}  />}/>\n            <Route path = {`/edit/:id`} render = {(rp) => <Edit {...rp}  />}/>\n            <Route path = {`/:id`} render = {(rp) => <Show {...rp}  />}/>\n          </Switch>\n        </main>\n      </div>\n    </GlobalCtx.Provider>\n  );\n}\n\nexport default App;\n",["71","72"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/reportWebVitals.js",[],["73","74"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/Calculator.js",["75","76","77","78","79","80","81","82","83","84"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/components/Header.js",["85"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/MyInfo.js",["86","87","88","89","90"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/index.js",[],["91","92"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/Home.js",["93","94","95","96","97"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/edit.js",["98","99"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport Form from 'react-bootstrap/Form'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Header from '../components/Header'\n\n\nconst Edit = (props) => {\n    const {gState, setGState} = React.useContext(GlobalCtx)\n    const {url, token} = gState\n    const [plastics, setPlastics] = React.useState(null)\n    console.log(plastics)\n\n    const blank = {\n        plastic_bags: React.useRef(null),\n        coffee_cup: React.useRef(null),\n        plastic_straw: React.useRef(null),\n        six_pack_plastic_rings: React.useRef(null),\n        plastic_water_bottle: React.useRef(null),\n        coffee_pod: React.useRef(null),\n        plastic_cup: React.useRef(null),\n        disposable_diaper: React.useRef(null),\n        plastic_toothbrush: React.useRef(null)\n    }\n\n    const [form, setForm] = React.useState(blank)\n\n    const handleChange = (event) => {\n        setForm({...form, [event.target.name]: event.target.value})\n        console.log(`The ${event.target.name} has ${event.target.value} many`)\n    }\n\n    const handleUpdate = (event) => {\n        event.preventDefault()\n        const {plastic_bags, coffee_cup, plastic_straw, six_pack_plastic_rings, plastic_water_bottle, coffee_pod, plastic_cup, disposable_diaper, plastic_toothbrush} = form\n\n        fetch(`${url}/plastics/${props.match.params.id}`, {\n            method: \"put\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": 'bearer ' + token\n            },\n            body: JSON.stringify({plastic_bags:plastic_bags, coffee_cup:coffee_cup, plastic_straw:plastic_straw, six_pack_plastic_rings:six_pack_plastic_rings, plastic_water_bottle:plastic_water_bottle, coffee_pod:coffee_pod, plastic_cup:plastic_cup, disposable_diaper:disposable_diaper, plastic_toothbrush:plastic_toothbrush})\n        })\n        .then(response => response.json())\n        .then((data) => {\n            console.log(data)\n\n            setForm(blank)\n            props.history.push(\"/\")\n        })\n    }\n\n    return (\n        <>\n            <Header/>\n            <h1>Measure My Plastic Footprint Today</h1>\n            <Form onSubmit={handleUpdate}>\n                <Container>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label \n                            className=\"plastic-bags\" htmlFor=\"inlineFormCustomSelectPref\">\n            Plastic Bags\n                        </Form.Label>\n                        <Form.Control\n                            as=\"select\"\n                            className=\"plastic-bags\"\n                            name=\"plastic_bags\"\n                            id=\"inlineFormCustomSelectPref\"\n                            value={form.plastic_bags}\n                            custom\n                            onChange={handleChange}\n                        >\n                            <option value=\"0\">Edit...</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label className=\"coffee-cup\" htmlFor=\"inlineFormCustomSelectPref\">\n            Coffee Cup\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"coffee-cup\"\n                                name=\"coffee_cup\"\n                                id=\"inlineFormCustomSelectPref\"\n                                value={form.coffee_cup}\n                                custom\n                                onChange={handleChange}\n\n                            >\n                                <option value=\"0\">Edit...</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label className=\"plastic-straw\" htmlFor=\"inlineFormCustomSelectPref\">\n            Plastic Straw\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"plastic-straw\"\n                                name=\"plastic_straw\"\n                                id=\"inlineFormCustomSelectPref\"\n                                value={form.plastic_straw}\n                                custom\n                                onChange={handleChange}\n\n                            >\n                                <option value=\"0\">Edit...</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label className=\"6-pack-plastic-rings\" htmlFor=\"inlineFormCustomSelectPref\">\n            6-pack Plastic Rings\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"6-pack-plastic-rings\"\n                                name=\"six_pack_plastic_rings\"\n                                id=\"inlineFormCustomSelectPref\"\n                                value={form.six_pack_plastic_rings}\n                                custom\n                                onChange={handleChange}\n\n                            >\n                                <option value=\"0\">Edit...</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label className=\"plastic-water-bottle\" htmlFor=\"inlineFormCustomSelectPref\">\n            Plastic Water Bottle\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"plastic-water-bottle\"\n                                name=\"plastic_water_bottle\"\n                                id=\"inlineFormCustomSelectPref\"\n                                value={form.plastic_water_bottle}\n                                custom\n                                onChange={handleChange}\n\n                            >\n                                <option value=\"0\">Edit...</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label className=\"coffee-pod\" htmlFor=\"inlineFormCustomSelectPref\">\n            Coffee Pod\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"coffee-pod\"\n                                name=\"coffee_pod\"\n                                id=\"inlineFormCustomSelectPref\"\n                                value={form.coffee_pod}\n                                custom\n                                onChange={handleChange}\n\n                            >\n                                <option value=\"0\">Edit...</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label className=\"plastic-cup\" htmlFor=\"inlineFormCustomSelectPref\">\n            Plastic Cup\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"plastic-cup\"\n                                name=\"plastic_cup\"\n                                id=\"inlineFormCustomSelectPref\"\n                                value={form.plastic_cup}\n                                custom\n                                onChange={handleChange}\n\n                            >\n                                <option value=\"0\">Edit...</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label className=\"disposable-diaper\" \n                        htmlFor=\"inlineFormCustomSelectPref\">\n            Disposable Diaper\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"disposable-diaper\"\n                                name=\"disposable_diaper\"\n                                id=\"inlineFormCustomSelectPref\"\n                                value={form.disposable_diaper}\n                                custom\n                                onChange={handleChange}\n\n                            >\n                                <option value=\"0\">Edit...</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Form.Row className=\"justify-content-md-center\">\n                    <Col md = {4}>\n                        <Form.Label className=\"plastic-toothbrush\" htmlFor=\"inlineFormCustomSelectPref\">\n            Plastic Toothbrush\n                            </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                className=\"plastic-toothbrush\"\n                                name=\"plastic_toothbrush\"\n                                id=\"inlineFormCustomSelectPref\"\n                                value={form.plastic_toothbrush}\n                                custom\n                                onChange={handleChange}\n\n                            >\n                                <option value=\"0\">Edit...</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                        </Form.Control>\n                    </Col>\n                </Form.Row>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Container>\n            </Form>\n        </>\n    )\n}\n\nexport default Edit;","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/pages/show.js",["100","101"],"import React from 'react'\nimport {GlobalCtx} from '../App'\nimport Header from '../components/Header'\nimport Table from 'react-bootstrap/Table'\n\nconst Show = (props) => {\n    const {gState, setGState} = React.useContext(GlobalCtx) \n    const {url, token} = gState\n    const [plastics, setPlastics] = React.useState(null)\n\n    const getPlastic = async () => {\n        const response = await fetch(url + \"/plastics/\" + props.match.params.id, {\n            method: \"get\",\n            headers: {\n                \"Authorization\": \"bearer \" + token\n            },\n        })\n        const json = await response.json()\n        setPlastics(json)\n    }\n\n    \n    React.useEffect(()=>{\n        getPlastic()\n    }, [])\n\n    return(\n        <>\n            <Header />\n            {console.log(plastics)}\n            {plastics ? \n            <Table striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                    <th>Timestamp</th>\n                    <th>{plastics.created_at}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                    <td>Plastic Bags</td>\n                    <td>{plastics.plastic_bags}</td>\n                    </tr>\n                    <tr>\n                    <td>Coffee Cups</td>\n                    <td>{plastics.coffee_cup}</td>\n                    </tr>\n                    <tr>\n                    <td>Plastic Straws</td>\n                    <td>{plastics.plastic_straw}</td>\n                    </tr>\n                    <tr>\n                    <td>6-Pack Plastic Rings</td>\n                    <td>{plastics.six_pack_plastic_rings}</td>\n                    </tr>\n                    <tr>\n                    <td>Plastic Water Bottles</td>\n                    <td>{plastics.plastic_water_bottle}</td>\n                    </tr>\n                    <tr>\n                    <td>Coffee Pods</td>\n                    <td>{plastics.coffee_pod}</td>\n                    </tr>\n                    <tr>\n                    <td>Plastic Cup</td>\n                    <td>{plastics.plastic_cup}</td>\n                    </tr>\n                    <tr>\n                    <td>Disposable Diaper</td>\n                    <td>{plastics.disposable_diaper}</td>\n                    </tr>\n                    <tr>\n                    <td>Plastic Toothbrush</td>\n                    <td>{plastics.plastic_toothbrush}</td>\n                    </tr>\n                </tbody>\n            </Table> : null}\n            \n        </>\n    )\n}\n\nexport default Show;","/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/components/Carder.js",["102","103","104","105","106","107"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/Modal.js",["108","109"],"/Users/joanne/seir-flex/projects/final/plastic_project/plastic_app_client/src/components/MeasureModal.js",["110","111","112"],{"ruleId":"113","severity":1,"message":"114","line":11,"column":20,"nodeType":"115","messageId":"116","endLine":11,"endColumn":29},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"113","severity":1,"message":"121","line":5,"column":16,"nodeType":"115","messageId":"116","endLine":5,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":29,"column":6,"nodeType":"124","endLine":29,"endColumn":8,"suggestions":"125"},{"ruleId":"117","replacedBy":"126"},{"ruleId":"119","replacedBy":"127"},{"ruleId":"117","replacedBy":"128"},{"ruleId":"119","replacedBy":"129"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":20,"nodeType":"115","messageId":"116","endLine":10,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":62,"column":54,"nodeType":"132","endLine":62,"endColumn":74},{"ruleId":"130","severity":1,"message":"131","line":85,"column":60,"nodeType":"132","endLine":85,"endColumn":80},{"ruleId":"130","severity":1,"message":"131","line":109,"column":63,"nodeType":"132","endLine":109,"endColumn":83},{"ruleId":"130","severity":1,"message":"131","line":133,"column":70,"nodeType":"132","endLine":133,"endColumn":90},{"ruleId":"130","severity":1,"message":"131","line":157,"column":70,"nodeType":"132","endLine":157,"endColumn":90},{"ruleId":"130","severity":1,"message":"131","line":181,"column":60,"nodeType":"132","endLine":181,"endColumn":80},{"ruleId":"130","severity":1,"message":"131","line":205,"column":61,"nodeType":"132","endLine":205,"endColumn":81},{"ruleId":"130","severity":1,"message":"131","line":229,"column":67,"nodeType":"132","endLine":229,"endColumn":87},{"ruleId":"130","severity":1,"message":"131","line":254,"column":68,"nodeType":"132","endLine":254,"endColumn":88},{"ruleId":"113","severity":1,"message":"133","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":17},{"ruleId":"113","severity":1,"message":"134","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":12},{"ruleId":"113","severity":1,"message":"135","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":16},{"ruleId":"113","severity":1,"message":"136","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":15,"column":20,"nodeType":"115","messageId":"116","endLine":15,"endColumn":29},{"ruleId":"122","severity":1,"message":"137","line":32,"column":8,"nodeType":"124","endLine":32,"endColumn":10,"suggestions":"138"},{"ruleId":"117","replacedBy":"139"},{"ruleId":"119","replacedBy":"140"},{"ruleId":"113","severity":1,"message":"141","line":2,"column":9,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"134","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":12},{"ruleId":"113","severity":1,"message":"135","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":16},{"ruleId":"113","severity":1,"message":"136","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":17},{"ruleId":"113","severity":1,"message":"121","line":7,"column":9,"nodeType":"115","messageId":"116","endLine":7,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":11,"column":20,"nodeType":"115","messageId":"116","endLine":11,"endColumn":29},{"ruleId":"113","severity":1,"message":"142","line":13,"column":22,"nodeType":"115","messageId":"116","endLine":13,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":7,"column":20,"nodeType":"115","messageId":"116","endLine":7,"endColumn":29},{"ruleId":"122","severity":1,"message":"137","line":25,"column":8,"nodeType":"124","endLine":25,"endColumn":10,"suggestions":"143"},{"ruleId":"113","severity":1,"message":"144","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"145","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":16},{"ruleId":"113","severity":1,"message":"146","line":16,"column":12,"nodeType":"115","messageId":"116","endLine":16,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":16,"column":20,"nodeType":"115","messageId":"116","endLine":16,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":29,"column":151,"nodeType":"132","endLine":29,"endColumn":166},{"ruleId":"147","severity":1,"message":"148","line":78,"column":105,"nodeType":"132","endLine":78,"endColumn":120},{"ruleId":"149","severity":1,"message":"150","line":38,"column":9,"nodeType":"151","endLine":41,"endColumn":10},{"ruleId":"149","severity":1,"message":"150","line":61,"column":13,"nodeType":"151","endLine":61,"endColumn":74},{"ruleId":"149","severity":1,"message":"150","line":38,"column":9,"nodeType":"151","endLine":41,"endColumn":10},{"ruleId":"147","severity":1,"message":"148","line":64,"column":113,"nodeType":"132","endLine":64,"endColumn":128},{"ruleId":"149","severity":1,"message":"150","line":67,"column":13,"nodeType":"151","endLine":67,"endColumn":74},"no-unused-vars","'setGState' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'gState'. Either include it or remove the dependency array. You can also do a functional update 'setGState(g => ...)' if you only need 'gState' in the 'setGState' call.","ArrayExpression",["154"],["152"],["153"],["152"],["153"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Jumbotron' is defined but never used.","'Card' is defined but never used.","'CardDeck' is defined but never used.","'Container' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getPlastic'. Either include it or remove the dependency array.",["155"],["152"],["153"],"'GlobalCtx' is defined but never used.","'setPlastics' is assigned a value but never used.",["156"],"'Header' is defined but never used.","'Carousel' is defined but never used.","'gState' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"159","fix":"161"},"Update the dependencies array to be: [gState]",{"range":"162","text":"163"},"Update the dependencies array to be: [getPlastic]",{"range":"164","text":"165"},{"range":"166","text":"165"},[782,784],"[gState]",[935,937],"[getPlastic]",[703,705]]